;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[server]
directory = . ; <short: -d> Server root directory
port = 9090 ; <short: -p> Server listening port
extensions = .cjs, .chtml ; <short: -e> The extensions of executable files, If there are multiple extensions, separate them with `,`
debug = off; <noargv> Enable debug mode to display error messages in response content
silent = off ; <noargv> <short:-s> Silent mode
locally = off; <noargv> <short:-l> Only listen to the local addresses

fpm.enable = off ; <short: -m> <noargv> Enable fpm mode to start as loadBalance, default is FastCGI mode
fpm.workers = 3 ; The number of workers for loadBalance

cache.pass.timeout=0 ; <short: -t> Specify the number of seconds the file content cache expires

entry.index = index.cjs,index.chtml ; The default entry file of a directory. If there are multiple selections, separate them with `,`
entry.fallback.traverse = on; <noargv> <short: -w> Enable traversing the directory when there does not exist default entry file
entry.forbidden = node_modules, settings ; Forbid access to files whose pathname contains the specified keywords, separate them with `,`
entry.fallback.filename = /path/to/fallback.cjs ; <short: -f> The fallback filename, this file will be used when the router path does not exist

plugin.enable.curl= yes ; Default enables curl plugin
plugin.enable.info= yes ; Default enables info plugin
plugin.enable.walker= yes ; Default enables walker plugin




[yaf]
application.environ = product
application.ext = '.cjs'
application.view.ext = '.chtml'
application.modules= index
application.forward_limit = 5
application.name_suffix = Controller
application.name_separator = _

application.dispatcher.catch_exception = 1
application.dispatcher.throw_exception = 1
application.dispatcher.default_module = index
application.dispatcher.default_controller = Index
application.dispatcher.default_action = index
application.dispatcher.default_route =


[cli]

cli.file = ; <required> <short:-f> The entry file pathname
cli.uri = / ; <short:-u> Specify the request URI
cli.host = localhost ; <short:-h> Specify the server host
cli.schema = "http:" ; <short:-s> Specify the server schema

plugin.enable.curl= yes
plugin.enable.info= yes
plugin.enable.walker= yes

[logger]
logger.enable=no ; <noargv> Enable writing the logs into files.
logger.logfile=./cjs_server_log.txt ; The output filepath of logs
logger.errorfile=./cjs_server_error.txt ; The output filepath of error logs


[security]

security.eval.disable= no ; <noargv> <short:-se> Disable eval function
security.pollute.Function.prototype= no ; <noargv> <short:-sp> Pollute the global function's prototype. This feature may affect some third-party modules not to work.
security.process.enable.attributes = * ; Specify the list of accessible attributes of the process object.
security.utils.enable.attributes = * ; Specify the accessible attributes of utils. `utils` is an internal object provided by the Template Engine.
security.require.enable.modules = * ; Specify the list of modules that can be used.
